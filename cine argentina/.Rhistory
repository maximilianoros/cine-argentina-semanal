install.packages("tabulizer")
https://CRAN.R-project.org/package=tabulizer
install.packages("C:/Users/LENOVO/Downloads/tabulizer_0.2.1.tar.gz", repos = NULL, type = "source")
knitr::opts_chunk$set(echo = TRUE)
library(tabulizer)
install.packages("C:/Users/LENOVO/Downloads/tabulizer_0.2.2.tar.gz", repos = NULL, type = "source")
library(tabulizer)
library(devtools)
devtools::install_github(c("leeper/tabulizerjars", "leeper/tabulizer"), INSTALL_opts = "--no-multiarch", dependencies = c("Depends", "Imports"))
library(tabulizer)
library(tabulizerjars)
library(devtools)
devtools::install_github(c("leeper/tabulizerjars", "leeper/tabulizer"), INSTALL_opts = "--no-multiarch", dependencies = c("Depends", "Imports"))
library(tabulizer)
tabla<- extract_tables("semana36.pdf")
View(tabla)
semana<- do.call(rbind, tabla[-length(tabla)])
tabla<- as.data.frame(tabla)
View(tabla)
tabla<- extract_tables("semana36.pdf")
semana<- do.call(rbind(), tabla[-length(tabla)])
semana<- do.call(rbind, tabla[-length(tabla)])
final <- do.call(rbind(tabla))
location <- 'http://www.edd.ca.gov/jobs_and_training/warn/WARN-Report-for-7-1-2016-to-10-25-2016.pdf'
# Extract the table
out <- extract_tables(location)
tabla<- extract_tables("semana36.pdf")
View(tabla)
tabla
View(tabla[[1]])
tabla<- extract_tables("semana36.pdf", output = "data.frame")
a<-locate_areas("semana36.pdf")
View(a)
a
tabla<- extract_tables("semana36.pdf", area = c("64.95522"  ,"39.34148", "442.50746", "496.59599"),output = "data.frame")
tabla<- extract_tables("semana36.pdf", area = c("64.95522"  ,"39.34148", "442.50746", "496.59599"))
tabla<- extract_tables("semana36.pdf", area =list(c("64.95522"  ,"39.34148", "442.50746", "496.59599")))
tabla<- extract_tables("semana36.pdf", area =list(c("64"  ,"39", "442", "496")))
tabla<- extract_tables("semana36.pdf")
temp <- data.frame(tabla[[1]])
View(temp)
knitr::opts_chunk$set(echo = TRUE)
setwd("~/GitHub/Autos/autos-acor-11-21")
library(readxl)
library(tidyverse)
library(stringr)
library(modeest)
library(leaflet)
library(leaflet.extras)
library(tmap)
library(tmaptools)
library(sf)
library(modeest)
library(scales)
library(fuzzyjoin)
autos<- read.csv("./objeto_automovil_2_12_11_2021.csv")
View(autos)
autos<- autos %>% separate(MODELO, into= c("a","b","c"),sep=' ', extra='merge')
prueba.modelos<-autos %>% select(a) %>% distinct(a)
#unique(autos$TIPO)
autos<- autos %>% mutate(tipo=case_when(a%in%c("NUEVA","NUEVO") ~ str_c(a,b, sep=" "),
TRUE ~ a))
autos<- autos %>% mutate(tipo=case_when(a=="LINEA"~ str_c(a,b, sep=' '), TRUE~a))
autos<- autos %>% mutate(pondera=1)
autos<- autos %>% mutate(dni=substr(x =RAZSOC,start = 3,stop = 10),
primercu=substr(x=RAZSOC, start = 0, stop=2),
verif=substr(x=RAZSOC, start = 11, stop=11))
pruebadetipos<- autos %>% select(TIPO) %>% distinct(TIPO)
#PICK UP
autos$TIPO[str_detect(string=autos$TIPO,pattern="PICK")]<-"PICK UP"
autos$TIPO[str_detect(autos$TIPO,pattern="SEDAN 5")]<-"SEDAN 5 PUERTAS"
autos$TIPO[str_detect(autos$TIPO,pattern="SEDAN  5")]<-"SEDAN 5 PUERTAS"
autos$TIPO[str_detect(autos$TIPO,pattern=" SEDAN 5")]<-"SEDAN 5 PUERTAS"
autos$TIPO[str_detect(autos$TIPO,pattern="SEDAN5")]<-"SEDAN 5 PUERTAS"
autos$TIPO[str_detect(autos$TIPO,pattern="5 PUERTAS")]<-"SEDAN 5 PUERTAS"
autos$TIPO[str_detect(autos$TIPO,pattern="5EDAN")]<-"SEDAN 5 PUERTAS"
autos$TIPO[str_detect(string=autos$TIPO, pattern = "SEDAN 4")]<-"SEDAN 4 PUERTAS"
autos$TIPO[str_detect(string=autos$TIPO, pattern = "SAEDAN 4")]<-"SEDAN 4 PUERTAS"
autos$TIPO[str_detect(string=autos$TIPO, pattern = "4 PUERTAS")]<-"SEDAN 4 PUERTAS"
#SEDAN 3 PUERTAS
autos$TIPO[str_detect(string=autos$TIPO, pattern = "SETAS 3")]<-"SEDAN 3 PUERTAS"
autos$TIPO[str_detect(string=autos$TIPO, pattern = "SEDAN 6 PUERTAS")]<-"SEDAN 3 PUERTAS" #en este caso particular se anota aca porque estaba mal computado.
#SEDAN 2
autos$TIPO[str_detect(string=autos$TIPO, pattern = "SEDAN 2")]<-"SEDAN 2 PUERTAS"
autos<- autos %>% mutate(sexo=case_when(primercu=="20"~"Hombres",
primercu=="27"~ "Mujeres",
primercu%in%c("30","33", "34") ~"Empresa",
primercu=="23" & verif=="9" ~ "Hombres",
primercu=="23" & verif =="4" ~ "Mujeres",
TRUE ~ "Indefinido"))
autos<- autos %>% filter(sexo%in%c("Hombres", "Mujeres"))
write.csv( autos,"autos.csv")
TIPO<-autos %>% filter() %>% group_by(TIPO) %>% summarise(cantidad=n(), porcentaje=formattable::percent((cantidad/sum(autos$pondera)))) %>% arrange(-cantidad)
TIPO
autos.comunes<- autos %>% group_by(MARCA) %>% summarise(cantidad=n(), porcentaje=formattable::percent( (cantidad/sum(autos$pondera)),2)) %>% arrange(-cantidad)
autos.comunes
modelos<- autos %>%  group_by(tipo, MARCA) %>%  summarise(cantidad=n(), porcentaje=formattable::percent((cantidad/sum(autos$pondera)),2)) %>% arrange(-cantidad)
modelos15<-modelos[1:15,]
modelos20<- modelos[1:20,]
modelos15
antiguedad<- autos %>% group_by(MODELO_A) %>%  summarise(cantidad=n(), porcentaje=formattable::percent( (cantidad/sum(autos$pondera)),2)) %>% arrange(MODELO_A)
antiguedad
autos$MODELO_A<- as.numeric(autos$MODELO_A)
autos %>% summarise(mediana=median(MODELO_A), media=mean(MODELO_A), moda=mfv(MODELO_A))
autos %>% group_by(sexo) %>% summarise(mediana=median(MODELO_A), media=mean(MODELO_A), moda=mfv(MODELO_A))
antiguedad  %>%  ggplot(mapping=aes( x=MODELO_A, y =cantidad, label=cantidad)) + geom_col() + geom_text(position = position_nudge(y=300)) + scale_x_continuous(labels = as.character(antiguedad$MODELO_A), breaks = antiguedad$MODELO_A) + theme(axis.text.x =element_text(angle = 90 ))
prius<- autos %>% filter(tipo=="PRIUS")
COROLLA<- autos %>% filter(tipo=="COROLLA" & b=="HV")
rav<- autos %>% filter(tipo%in%c("RAV", "RAV4") & b=="HV")
toyotahibrido<-autos %>% filter(b=="HV")
mondeo<-autos %>% filter(tipo=="MONDEO" & b=="HIBRIDO")
rangerover<- autos %>% filter(MARCA=="LAND ROVER" & c=="EVOQUE")
hibridos<- bind_rows(toyotahibrido,mondeo,rangerover)
GOL<- autos %>% filter(tipo=="GOL" & b=="TREND" & TIPO=="SEDAN 5 PUERTAS")
GOL<- GOL %>%  separate(c, into = c("c","d","e","f"), sep=' ', extra='merge')
GOL<- autos %>% filter(tipo=="GOL" & b=="TREND" & TIPO=="SEDAN 5 PUERTAS")
GOL<- GOL %>%  separate(c, into = c("c","d","e","f"), sep=' ', extra='merge')
#Todos los GOL Trend de 2020 y 2021 son a gas.
GOL<- GOL%>% mutate(gas=case_when(e=="GAS" ~ 1,                                     TRUE~0))
#Promedios
GOL %>% filter(MODELO_A=="2008")  %>% group_by(gas) %>% count()
GOL %>% filter(MODELO_A=="2009")  %>% group_by(gas) %>% count()
GOL %>% filter(MODELO_A=="2010")  %>% group_by(gas) %>% count()
GOL %>% filter(MODELO_A=="2011")  %>% group_by(gas) %>% count()
GOL %>% filter(MODELO_A=="2012")  %>% group_by(gas) %>% count()
GOL %>% filter(MODELO_A=="2013")  %>% group_by(gas) %>% count()
GOL %>% filter(MODELO_A=="2014")  %>% group_by(gas) %>% count()
GOL %>% filter(MODELO_A=="2015")  %>% group_by(gas) %>% count()
GOL %>% filter(MODELO_A=="2016")  %>% group_by(gas) %>% count()
GOL %>% filter(MODELO_A=="2017")  %>% group_by(gas) %>% count()
GOL %>% filter(MODELO_A=="2018")  %>% group_by(gas) %>% count()
#Cambio total
GOL %>% filter(MODELO_A=="2019")  %>% group_by(gas) %>% count()
GOL %>% filter(MODELO_A=="2020")  %>% group_by(gas) %>% count()
GOL %>% filter(MODELO_A=="2021")  %>% group_by(gas) %>% count()
GOL<- GOL%>% mutate(gas.considera=case_when(gas==1 & MODELO_A %in% c("2015", "2016", "2017", "2018")~ 0,
gas==0 & MODELO_A %in% seq("2008","2018", 1)~ 1,
gas==1 & MODELO_A %in% c("2019", "2020", "2021")~ 1)) %>% filter(gas.considera==1)
resumenxaño<-GOL %>% group_by(año=MODELO_A) %>% summarise(media=mean(VALUACION), mediana=median(VALUACION), varianza=var(VALUACION), desvio=sqrt(varianza), cv=formattable::percent((desvio/media),2))
resumenxaño<- resumenxaño %>% select(año,mediana) %>% arrange(-año)
resumenxaño<- resumenxaño %>% mutate(primer=resumenxaño[1,2] %>% pull())
GOLresumen<- resumenxaño %>% mutate(varia=formattable::percent(((lag(x = mediana)/mediana)-1),2), var= formattable::percent(((mediana-primer)/primer),2), tipo="GOL")
ECOSPORT<- autos %>% filter(tipo=="ECOSPORT" & b%in%c("1.6","1.6L","SE","S") )
ECOSPORT %>% group_by(MODELO_A) %>% count()
resumenxaño<-ECOSPORT %>% group_by(año=MODELO_A) %>% summarise(media=mean(VALUACION), mediana=median(VALUACION), varianza=var(VALUACION), desvio=sqrt(varianza), cv=formattable::percent((desvio/media),2))
resumenxaño<- resumenxaño %>% select(año,mediana) %>% arrange(-año)
resumenxaño<- resumenxaño %>% mutate(primer=resumenxaño[1,2] %>% pull())
ECOSPORTresumen<- resumenxaño %>% mutate(varia=formattable::percent(((lag(x = mediana)/mediana)-1),2), var= formattable::percent(((mediana-primer)/primer),2), tipo="ECOSPORT")
COROLLA<- autos %>% filter(tipo=="COROLLA" )
COROLLA<- COROLLA %>% unite(col = hola,b,c,sep = "-")
COROLLA <- COROLLA %>% mutate(xe=case_when(str_detect(string = COROLLA$hola, pattern = "XE")==TRUE~1,
TRUE~0))
COROLLA<- COROLLA %>% filter(xe==1)
COROLLA %>% group_by(MODELO_A) %>% count()
resumenxaño<-COROLLA %>% group_by(año=MODELO_A) %>% summarise(media=mean(VALUACION), mediana=median(VALUACION), varianza=var(VALUACION), desvio=sqrt(varianza), cv=formattable::percent((desvio/media),2))
resumenxaño<- resumenxaño %>% select(año,mediana) %>% arrange(-año)
resumenxaño<- resumenxaño %>% mutate(primer=resumenxaño[1,2] %>% pull())
COROLLAresumen<- resumenxaño %>% mutate(varia=formattable::percent(((lag(x = mediana)/mediana)-1),2), var= formattable::percent(((mediana-primer)/primer),2), tipo="COROLLA")
HILUX<- autos %>% filter(tipo=="HILUX"  & b=="4X2")
HILUX<- HILUX %>%  separate(c, into= c("c","d","e"), sep=" ",extra = 'merge')
HILUX<- HILUX %>% unite(col = nombre, c,d,sep=" ")
HILUX<- HILUX %>% unite(col = hola,nombre,e,sep = "-")
HILUX <- HILUX %>% mutate(srv=case_when(str_detect(string = HILUX$hola, pattern = "SRV")==TRUE & MODELO_A<=2016~1,
str_detect(string = HILUX$hola, pattern = "SRX")==TRUE & MODELO_A>2016 ~1,
str_detect(string = HILUX$hola, pattern = "SRV")==TRUE & MODELO_A==2021 ~1,
TRUE~0))
HILUX<- HILUX %>% filter(srv==1) %>% arrange(-MODELO_A)
HILUX %>% group_by(MODELO_A) %>% summarise(max(VALUACION), min(VALUACION))
HILUX %>% group_by(MODELO_A) %>% count()
resumenxaño<-HILUX %>% group_by(año=MODELO_A) %>% summarise(media=mean(VALUACION), mediana=median(VALUACION), varianza=var(VALUACION), desvio=sqrt(varianza), cv=formattable::percent((desvio/media),2), max=max(VALUACION))
resumenxaño<- resumenxaño %>% select(año,max) %>% arrange(-año)
resumenxaño<- resumenxaño %>% mutate(primer=resumenxaño[1,2] %>% pull())
HILUXresumen<- resumenxaño %>% mutate(varia=formattable::percent(((lag(x = max)/max)-1),2), var= formattable::percent(((max-primer)/primer),2), tipo="HILUX")
HILUXresumen<- HILUXresumen %>% rename(mediana=max)
resumenes<- bind_rows(GOLresumen, COROLLAresumen, ECOSPORTresumen, HILUXresumen)
resumenes<- resumenes %>% select(año,mediana,var, varia, tipo) %>% rename("Valuación"=mediana)
write.csv(resumenes,"resumen.10.csv")
resumenes<- bind_rows(GOLresumen, COROLLAresumen, ECOSPORTresumen, HILUXresumen)
resumenes<- resumenes %>% select(año,mediana,var, varia, tipo) %>% rename("Valuación"=mediana)
write.csv(resumenes,"resumen.11.csv")
barrios<- st_read("Barrios.shp")
nombres<- barrios %>% select(barrio)
nombres<- data.frame(nombres)  %>% select(barrio)
nombres<- nombres %>% mutate(id=seq(1,140, by=1))
nombreautos<- autos %>% select(BARRIO) %>% unique()
nombreautos<- nombreautos %>% rename(barrio=BARRIO)
nombresunique<- stringdist_join(nombreautos, nombres)
nombresunique<- nombresunique %>% rename(barrio=barrio.x, barriomapa=barrio.y)
nombresunique<- nombresunique %>% distinct(barrio,.keep_all = T)
nombreautos<- left_join(nombreautos, nombresunique)
nombreautos<- nombreautos %>% mutate(barriomapa=case_when(barrio=="BEJARANO" & barriomapa=="BELGRANO" ~ "BEJARANO",
barrio=="SANTA RITA" & barriomapa=="SANTA ROSA" ~ "SANTA RITA",
TRUE ~ barriomapa))
nombreautos<- nombreautos %>% mutate(barriomapa=case_when(barrio=="RCA.VENEZUELA" ~ "REPÚBLICA DE VENEZUELA",
barrio== "P.BUENOS AIRES" ~"PUEBLO BUENOS AIRES",
barrio== "ANT.ARGENTINA" ~"ANTARTIDA ARGENTINA",
barrio== "RCIAL.SANTA ROSA" ~"RESIDENCIAL SANTA ROSA",
barrio== "GUEMES-S.INVICO" ~"GUEMES INVICO",
barrio== "C.DE ESTEPA" ~"CIUDAD DE ESTEPA",
barrio== "C.DE  AREQUIPA" ~"CIUDAD DE AREQUIPA",
barrio=="Ntra.SEÑORA DE LA ASUNCION" ~ "NTRA. SRA. DE LA ASUNCIÓN",
barrio== "C.CORRENTINAS" ~"CIUDADES CORRENTINAS",
barrio== "T.DE TACUARI" ~"TAMBOR DE TACUARÍ",
barrio== "C.CANINDEYU" ~"CACIQUE CANINDEYÚ",
barrio== "B.DE ASTRADA" ~"BERÓN DE ASTRADA",
barrio== "PRESIDENTA CRISTINA FERNANDEZ DE KIRCHNER" ~"PTE. CRISTINA F. DE KIRCHNER",
barrio== "PRESIDENTE DR. NESTOR CARLOS KIRCHNER" ~"CIUDAD DE AREQUIPA",
barrio=="PARAJE PERICHON" ~ "Bº PARAJE PERICHÓN",
barrio== "GOLF CLUB CORRIENTES(Bº CERRADO)" ~"GOLF CLUB",
barrio== "CLUB DE CAMPO (Bº BUENA VISTA I)" ~"BUENA VISTA I",
barrio== "DR.LUIS F. LELOIR" ~"DR. LUIS LELOIR",
TRUE ~ barriomapa))
nombreautos %>% filter(is.na(barriomapa))
autos<- autos %>% rename(barrio=BARRIO)
autos<- left_join(autos,nombreautos)
autos %>% select(barrio, barriomapa) %>% unique()
autosmapa<- autos %>% filter(!is.na(barriomapa))
autosmapa<- autosmapa %>% rename(barrio2=barrio, barrio=barriomapa)
autosmapa2<- autosmapa %>% group_by(barrio) %>% summarise("Cantidad de autos:"=sum(pondera))
autosmapa2<- inner_join(barrios,autosmapa2)
autosmapa2<- autosmapa2 %>% select(-OBJECTID_1)
autosxbarrio<- tm_shape(shp = autosmapa2)  +tm_polygons("Cantidad de autos:", title="Cantidad de autos:", alpha = 0.5,style="cont")
tmap_mode("view")
autosxbarrio
direcciones<- autos %>% separate(DOMICILIO, into=c("barrio", "calle", "numero", "nose"), sep="-")
direcciones<- direcciones %>% mutate(direccion=glue::glue("{calle} {numero}, Corrientes Argentina"))
dire2<- direcciones %>% select(direccion)
dire2<-dire2[str_extract(dire2$direccion, pattern = "MENDOZA")=="MENDOZA",]
dire2<- as.vector(t(dire2))
class(dire2)
data
geocode_OSM(dire2,server = "https://nominatim.openstreetmap.org")
provincial<- read.csv("registro_provincia.csv", header = T, sep=";")
provincial<- read.csv("registro_provincia.csv", header = T, sep=";")
resumenxaño<- autos %>% group_by(año=MODELO_A) %>% summarise(autos=sum(pondera)/12,autos2=case_when(año==2021~ sum(pondera)/8,
TRUE~sum(pondera)/12)) %>% distinct(año,autos2)
ggplot(resumenxaño, aes(x=año))+
geom_line(aes(y=autos2))+
geom_point(aes(y=autos2))+ ggthemes::theme_wsj(base_size = 9)+labs(title="Promedio mensual patentamientos")
resumenxaño<- resumenxaño %>% select(año,autos) %>% arrange(-año,autos)
inscripciones.iniciales<- read_excel("tasa.de.desercion.xlsx")
#primero chequear con gretl
#Desestacionalizar ciudad. Gretl confirma su presencia.
ciudad.dest<-ts(inscripciones.iniciales$ciudad, start=c(2014,01), end=c(2021,10), frequency=12)
ciudad.dest<- seasonal::seas(ciudad.dest, outlier = NULL)
plot(ciudad.dest)
#Desestacionalizar provincia.Gretl confirma su presencia.
provincia.dest<- ts(inscripciones.iniciales$provincia, start=c(2014,01), end=c(2021,10), frequency=12)
provincia.dest<- seasonal::seas(provincia.dest, outlier = NULL)
plot(provincia.dest)
#Juntando
periodo<- seq(as.Date('2014-01-01'),as.Date('2021-10-01'),by='month')
periodo<- data.frame(periodo)
ciudad.dest.2<-data.frame(ciudad.dest$data[,1])
provincia.dest.2<- data.frame(provincia.dest$data[,1])
inscripciones.dest<- bind_cols(periodo,inscripciones.iniciales$ciudad,ciudad.dest.2, inscripciones.iniciales$provincia, provincia.dest.2)
colnames(inscripciones.dest)<- c("periodo", "ciudad", "ciudad.desest", "provincia", "provincia.desest")
#write.csv(inscripciones.dest, "inscripciones_iniciales_desestacionalidas.csv")
inscripciones.dest$periodo<- as.Date(inscripciones.dest$periodo)
tasa.desert.desest<- inscripciones.dest %>% summarise(periodo, "tasa desest"= (ciudad.desest/provincia.desest))
#write.csv(tasa.desert.desest, "tasa.desercion.csv")
ggplot(tasa.desert.desest, aes(x=periodo, y=`tasa desest`))+
geom_line()+
scale_y_continuous(labels = percent_format(),limits=c(0.2,0.6), breaks = seq(0,0.8,0.1))+
scale_x_date(labels=scales::date_format(format='%h-%Y'),breaks=seq(as.Date('2014-01-01'),as.Date('2021-09-01'),150))+
labs(title="Tasa de deserción desetacionalizada")+
theme(axis.text.x = element_text(size=8,vjust=0.5,angle=45))
ggplot(inscripciones.iniciales, aes(x=mes, y=tasa_desercion))+ geom_line()
View(resumenes)
write.csv(tasa.desert.desest, "tasa.desercion.csv")
View(tasa.desert.desest)
knitr::opts_chunk$set(echo = TRUE)
autos<- read.csv("objeto_automovil_2.csv", header=T, sep=",", dec=",")
autos<- autos %>% separate(MODELO,into = c("a","b","c","d","e","f","g", "h", "i", "j", "k", "l", "m", "n", "o"), sep = " ")
autos<- autos %>% mutate(tipo=case_when(a=="NUEVO" ~ str_c(a,b, sep=" "),
TRUE ~ a))
autos<- autos %>% mutate(pondera=1)
autos<- autos %>% mutate(dni=substr(x =RAZSOC,start = 3,stop = 10),
primercu=substr(x=RAZSOC, start = 0, stop=2),
verif=substr(x=RAZSOC, start = 11, stop=11))
autos$TIPO[str_detect(string = autos$TIPO,pattern = "PICK")]<-"PICK UP"
autos$TIPO[str_detect(string=autos$TIPO, pattern = "SEDAN 5")]<-"SEDAN 5 PUERTAS"
autos$TIPO[str_detect(string=autos$TIPO, pattern = "5EDAN")]<-"SEDAN 5 PUERTAS"
autos$TIPO[str_detect(string=autos$TIPO, pattern = "5 PUERTAS")]<-"SEDAN 5 PUERTAS"
autos$TIPO[str_detect(string=autos$TIPO, pattern = "SEDAN5")]<-"SEDAN 5 PUERTAS"
autos$TIPO[str_detect(string=autos$TIPO, pattern = "SEDAN 4")]<-"SEDAN 4 PUERTAS"
autos$TIPO[str_detect(string=autos$TIPO, pattern = "SAEDAN 4")]<-"SEDAN 4 PUERTAS"
autos$TIPO[str_detect(string=autos$TIPO, pattern = "SEDAN 2")]<-"SEDAN 2 PUERTAS"
autos$TIPO[str_detect(string=autos$TIPO, pattern = "SETAS 3")]<-"SEDAN 3 PUERTAS"
autos<- autos %>% mutate(sexo=case_when(primercu=="20"~"Hombres",
primercu=="27"~ "Mujeres",
primercu%in%c("30","33", "34") ~"Empresa",
primercu=="23" & verif=="9" ~ "Hombres",
primercu=="23" & verif =="4" ~ "Mujeres",
TRUE ~ "Indefinido"))
autos<- autos %>% filter(sexo%in%c("Hombres", "Mujeres"))
#write.csv( autos,"autos.csv")
autos %>% filter() %>% group_by(TIPO) %>% summarise(cantidad=n(), porcentaje=formattable::percent( (cantidad/sum(autos$pondera)),2)) %>% arrange(-cantidad)
comunes<- autos %>% group_by(MARCA) %>% summarise(cantidad=n(), porcentaje=formattable::percent( (cantidad/sum(autos$pondera)),2)) %>% arrange(-cantidad)
modelos<- autos %>%  group_by(tipo, MARCA) %>%  summarise(cantidad=n(), porcentaje=formattable::percent( (cantidad/sum(autos$pondera)),2)) %>% arrange(-cantidad)
modelos15<-modelos[1:15,]
modelos20<- modelos[1:20,]
antiguedad<- autos %>% group_by(MODELO_A) %>%  summarise(cantidad=n(), porcentaje=formattable::percent( (cantidad/sum(autos$pondera)),2)) %>% arrange(MODELO_A)
autos %>% summarise(mediana=median(MODELO_A), media=mean(MODELO_A), moda=mfv(MODELO_A))
autos %>% group_by(sexo) %>% summarise(mediana=median(MODELO_A), media=mean(MODELO_A), moda=mfv(MODELO_A))
antiguedad  %>%  ggplot(mapping=aes( x=MODELO_A, y =cantidad, label=cantidad)) + geom_col() + geom_text(position = position_nudge(y=300)) + scale_x_continuous(labels = as.character(antiguedad$MODELO_A), breaks = antiguedad$MODELO_A) + theme(axis.text.x =element_text(angle = 90 ))
prius<- autos %>% filter(tipo=="PRIUS")
COROLLA<- autos %>% filter(tipo=="COROLLA" & b=="HV")
rav<- autos %>% filter(tipo%in%c("RAV", "RAV4") & b=="HV")
toyotahibrido<-autos %>% filter(b=="HV")
mondeo<-autos %>% filter(tipo=="MONDEO" & b=="HIBRIDO")
rangerover<- autos %>% filter(MARCA=="LAND ROVER" & c=="EVOQUE")
hibridos<- bind_rows(toyotahibrido,mondeo,rangerover)
# write.csv(hibridos, "hibridos.csv")
GOL<- autos %>% filter(tipo=="GOL" & b=="TREND" & TIPO=="SEDAN 5 PUERTAS" , c%in% c("1.6", "TRENDLINE")) %>% mutate(gas=case_when(e=="GAS" & MODELO_A %in% c("2018", "2019") ~1,
TRUE~0))  %>% filter(gas==0)
GOL %>% group_by(MODELO_A) %>% count()
GOL %>% filter(MODELO_A=="2019")
resumenxaño<-GOL %>% group_by(año=MODELO_A) %>% summarise(media=mean(VALUACION), mediana=median(VALUACION), varianza=var(VALUACION), desvio=sqrt(varianza), cv=formattable::percent((desvio/media),2))
resumenxaño<- resumenxaño %>% select(año,mediana) %>% arrange(-año)
resumenxaño<- resumenxaño %>% mutate(primer=resumenxaño[1,2] %>% pull())
GOLresumen<- resumenxaño %>% mutate(varia=formattable::percent(((lag(x = mediana)/mediana)-1),2), var= formattable::percent(((mediana-primer)/primer),2), tipo="GOL")
ECOSPORT<- autos %>% filter(tipo=="ECOSPORT" & b%in%c("1.6","1.6L","SE","S") )
ECOSPORT %>% group_by(MODELO_A) %>% count()
resumenxaño<-ECOSPORT %>% group_by(año=MODELO_A) %>% summarise(media=mean(VALUACION), mediana=median(VALUACION), varianza=var(VALUACION), desvio=sqrt(varianza), cv=formattable::percent((desvio/media),2))
resumenxaño<- resumenxaño %>% select(año,mediana) %>% arrange(-año)
resumenxaño<- resumenxaño %>% mutate(primer=resumenxaño[1,2] %>% pull())
ECOSPORTresumen<- resumenxaño %>% mutate(varia=formattable::percent(((lag(x = mediana)/mediana)-1),2), var= formattable::percent(((mediana-primer)/primer),2), tipo="ECOSPORT")
COROLLA<- autos %>% filter(tipo=="COROLLA" )
COROLLA<- COROLLA %>% unite(col = hola,b,c,sep = "-")
COROLLA <- COROLLA %>% mutate(xe=case_when(str_detect(string = COROLLA$hola, pattern = "XE")==TRUE~1,
TRUE~0))
COROLLA<- COROLLA %>% filter(xe==1)
COROLLA %>% group_by(MODELO_A) %>% count()
resumenxaño<-COROLLA %>% group_by(año=MODELO_A) %>% summarise(media=mean(VALUACION), mediana=median(VALUACION), varianza=var(VALUACION), desvio=sqrt(varianza), cv=formattable::percent((desvio/media),2))
resumenxaño<- resumenxaño %>% select(año,mediana) %>% arrange(-año)
resumenxaño<- resumenxaño %>% mutate(primer=resumenxaño[1,2] %>% pull())
COROLLAresumen<- resumenxaño %>% mutate(varia=formattable::percent(((lag(x = mediana)/mediana)-1),2), var= formattable::percent(((mediana-primer)/primer),2), tipo="COROLLA")
HILUX<- autos %>% filter(tipo=="HILUX"  & b=="4X2"  )
HILUX<- HILUX %>% unite(col = hola,d,e,sep = "-")
HILUX <- HILUX %>% mutate(srv=case_when(str_detect(string = HILUX$hola, pattern = "SRV")==TRUE & MODELO_A<=2016~1,
str_detect(string = HILUX$hola, pattern = "SRX")==TRUE & MODELO_A>2016 ~1,
str_detect(string = HILUX$hola, pattern = "SRV")==TRUE & MODELO_A==2021 ~1,
TRUE~0))
HILUX<- HILUX %>% filter(srv==1) %>% arrange(-MODELO_A)
HILUX %>% group_by(MODELO_A) %>% summarise(max(VALUACION), min(VALUACION))
HILUX %>% group_by(MODELO_A) %>% count()
resumenxaño<-HILUX %>% group_by(año=MODELO_A) %>% summarise(media=mean(VALUACION), mediana=median(VALUACION), varianza=var(VALUACION), desvio=sqrt(varianza), cv=formattable::percent((desvio/media),2), max=max(VALUACION))
resumenxaño<- resumenxaño %>% select(año,max) %>% arrange(-año)
resumenxaño<- resumenxaño %>% mutate(primer=resumenxaño[1,2] %>% pull())
HILUXresumen<- resumenxaño %>% mutate(varia=formattable::percent(((lag(x = max)/max)-1),2), var= formattable::percent(((max-primer)/primer),2), tipo="HILUX")
HILUXresumen<- HILUXresumen %>% rename(mediana=max)
resumenes<- bind_rows(GOLresumen, COROLLAresumen, ECOSPORTresumen, HILUXresumen)
resumenes<- resumenes %>% select(año,mediana,var, varia, tipo) %>% rename("Valuación"=mediana)
#write.csv(resumenes,"resumen.csv" )
knitr::opts_chunk$set(echo = TRUE)
#SEMANA 46
semana.46<- read.csv2("semana46-11.11.csv") %>% select(-entradas_total..v_is_pelicula_diario.)
library(tidyverse)
library(pdftools)
library(tabulizer)
#library(tabulizerjars)
library(readxl)
library(scales)
#SEMANA 36
semana.36<- read.csv2("semana36-03.09.csv") %>% select(-entradas_total..v_is_pelicula_diario.)
semana.36<- semana.36 %>% summarise(estreno=ï..Fecha.Estreno, titulo=ing.Titulo, espectadores.semanales=Espec..Semana, semanas.en.cartelera= Semana.Cartel, pantallas.proyectadas=Pantallas, fecha= "03-09-2021", semana=36)
#SEMANA 37
semana.37<- read.csv2("semana37-10.09.csv") %>% select(-entradas_total..v_is_pelicula_diario.)
semana.37<- semana.37  %>% summarise(estreno=ï..Fecha.Estreno, titulo=ing.Titulo, espectadores.semanales=Espec..Semana, semanas.en.cartelera= Semana.Cartel, pantallas.proyectadas=Pantallas, fecha= "10-09-2021", semana=37)
#SEMANA 38
semana.38<- read.csv2("semana38-16.09.csv") %>% select(-entradas_total..v_is_pelicula_diario.)
semana.38<-semana.38 %>% summarise(estreno=ï..Fecha.Estreno, titulo=ing.Titulo, espectadores.semanales=Espec..Semana, semanas.en.cartelera= Semana.Cartel, pantallas.proyectadas=Pantallas, fecha= "16-09-2021", semana=38)
#SEMANA 39
semana.39<- read.csv2("semana39-23.09.csv") %>% select(-entradas_total..v_is_pelicula_diario.)
semana.39<- semana.39 %>% summarise(estreno=ï..Fecha.Estreno, titulo=ing.Titulo, espectadores.semanales=Espec..Semana, semanas.en.cartelera= Semana.Cartel, pantallas.proyectadas=Pantallas, fecha= "23-09-2021",semana=39)
#SEMANA 40
semana.40<- read.csv2("semana40-30.09.csv") %>% select(-entradas_total..v_is_pelicula_diario.)
semana.40<- semana.40 %>% summarise(estreno=ï..Fecha.Estreno, titulo=ing.Titulo, espectadores.semanales=Espec..Semana, semanas.en.cartelera= Semana.Cartel, pantallas.proyectadas=Pantallas, fecha= "30-09-2021", semana=40)
#SEMANA 41
semana.41<- read.csv2("semana41-07.10.csv") %>% select(-entradas_total..v_is_pelicula_diario.)
semana.41<- semana.41 %>%  summarise(estreno=ï..Fecha.Estreno, titulo=ing.Titulo, espectadores.semanales=Espec..Semana, semanas.en.cartelera= Semana.Cartel, pantallas.proyectadas=Pantallas, fecha= "07-10-2021", semana=41)
#SEMANA 42
semana.42<- read.csv2("semana42-14.10.csv") %>% select(-entradas_total..v_is_pelicula_diario.)
semana.42<- semana.42 %>%  summarise(estreno=ï..Fecha.Estreno, titulo=ing.Titulo, espectadores.semanales=Espec..Semana, semanas.en.cartelera= Semana.Cartel, pantallas.proyectadas=Pantallas, fecha= "14-10-2021", semana=42)
#SEMANA 43
semana.43<- read.csv2("semana43-21.10.csv") %>% select(-entradas_total..v_is_pelicula_diario.)
semana.43<- semana.43 %>% summarise(estreno=ï..Fecha.Estreno, titulo=ing.Titulo, espectadores.semanales=Espec..Semana, semanas.en.cartelera= Semana.Cartel, pantallas.proyectadas=Pantallas, fecha= "21-10-2021", semana=43)
#SEMANA 44
semana.44<- read.csv2("semana44-28.10.csv") %>% select(-entradas_total..v_is_pelicula_diario.)
semana.44<-semana.44 %>% summarise(estreno=ï..Fecha.Estreno, titulo=ing.Titulo, espectadores.semanales=Espec..Semana, semanas.en.cartelera= Semana.Cartel, pantallas.proyectadas=Pantallas, fecha="28-10-2021", semana=44)
#SEMANA 45
semana.45<- read.csv2("semana45-04.11.csv") %>% select(-entradas_total..v_is_pelicula_diario.)
semana.45<- semana.45 %>% summarise(estreno=ï..Fecha.Estreno, titulo=ing.Titulo, espectadores.semanales=Espec..Semana, semanas.en.cartelera= Semana.Cartel, pantallas.proyectadas=Pantallas, fecha="04-11-2021", semana=45)
#SEMANA 46
semana.46<- read.csv2("semana46-11.11.csv") %>% select(-entradas_total..v_is_pelicula_diario.)
#SEMANA 46
semana.46<- read.csv2("semana46-11.11.csv")
semana.46<- semana.46 %>% summarise(estreno=ï..Fecha.Estreno, titulo=ing.Titulo, espectadores.semanales=Espec..Semana, semanas.en.cartelera= Semana.Cartel, pantallas.proyectadas=Pantallas, fecha= "11-11-2021", semana=46)
semanas<- bind_rows(semana.36,semana.37,semana.38,semana.39,semana.40,semana.41,semana.42,semana.43,semana.44,semana.45,semana.46)
semanas$fecha<- as.Date(semanas$fecha, "%d-%m-%Y")
datos.36<- semana.36 %>% summarise( mes="Septiembre",semana=as.Date("2021-09-03"), numero.semana=36, entradas.totales=sum(Espec..Semana))
View(semanas)
View(semana.46)
